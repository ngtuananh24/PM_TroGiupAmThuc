<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>