<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>